#!/usr/bin/python

# Copyright (C) 1994-2023 OpenTV, Inc. and Nagravision S.A.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

import sys

# Function to generate RSkThirdPartyViewConfigManager.Cpp
def generateThirdPartyViewConfigManagerCpp(buildGenPath, viewManagerConfigs):
  print('Generating RSkThirdPartyViewConfigManager.Cpp...')
  TPviewManagerConfigTemplate = '''/**
 * This code was generated by ReactNativeSKia codegn.
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by ''' + sys.argv[0] + '''
 */

#include <string>

#include "ReactSkia/utils/RnsLog.h"

#include "ReactSkia/LegacyNativeModules/uimanager/UiManagerModule.h"

using namespace folly;

namespace facebook {
namespace xplat {
namespace uimanager {

dynamic Uimanager::getConstantsForThirdpartyViewManager(std::string viewManagerName) {

  RNS_LOG_WARN("getConstantsForViewManager viewManagerName : " << viewManagerName << " not found");

  dynamic nativeProps = folly::dynamic::object;
  dynamic bubblingEventTypes = folly::dynamic::object;
  dynamic directEventTypes = folly::dynamic::object;

  ''' + viewManagerConfigs + '''

  auto registry = folly::dynamic::object(
      NATIVE_PROPS_KEY, std::move(nativeProps))(
      BASE_MODULE_NAME_KEY, "RCTView")(
      BUBBLING_EVENTS_KEY, std::move(bubblingEventTypes))(
      DIRECT_EVENTS_KEY, std::move(directEventTypes));
  return {std::move(registry)};
}

} // namespace uimanager
} // namespace xplat
} // namespace facebook'''

  cppFilePath = sys.argv[1] + '/'+'RSkThirdPartyViewConfigManager.cpp'
  gnf= open( cppFilePath, "w+")
  gnf.write(TPviewManagerConfigTemplate)
  gnf.close()
# End of function generateThirdPartyViewConfigManagerCpp()
